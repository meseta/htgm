include:
  - project: 'worldwidewebb/infrastructure/ci-templates'
    ref: '20231139'
    file:
      - 'common.yaml'
      - 'docker.yaml'
      - 'helm.yaml'
      - 'standard_helm.yaml'

stages:
  - test
  - build
  - deploy
  - stage
  - beta
  - prod

workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG

variables:
  SERVICE_NAME: auth
  NAMESPACE: saas
  IMAGE_NAME: us-central1-docker.pkg.dev/webb-store/images/saas/webhost
  CHART_YAML_COMMON: chart/common.yaml
  RUNTIME: "2023.1100.0.455"
  YYP_FILE: webhost/webhost.yyp

gamemaker build:
  needs: []
  stage: build
  image: us-central1-docker.pkg.dev/webb-store/images/infrastructure/gamemaker-ci:$RUNTIME
  tags: [gamemaker]
  variables:
    CONFIG_NAME: Default
  script:

    # collect profile TODO: gamemaker website no longer has facility to fetch access key, so revert to old method for now
    # - export ACCESS_KEY=$(gcloud secrets versions access "latest" --secret=gamemaker-access-key)
    # - $RUNTIME_DIR/bin/igor/linux/x64/Igor --ak=$ACCES_KEY runtime FetchLicense > $PROFILE_DIR/license.plist

    - gcloud secrets versions access "latest" --secret=gamemaker > $PROFILE_DIR/licence.plist

    # make build, dealing with wak gamemaker requirements
    - mkdir -p $CI_PROJECT_DIR/gm_tmp/build && mkdir -p $CI_PROJECT_DIR/gm_tmp/out && mkdir -p $CI_PROJECT_DIR/gm_tmp/cache && cd $CI_PROJECT_DIR/gm_tmp/build
    - 'echo "{\"applicationPath\": \"\",\"steamOptions\": \"\",\"debuggerPort\": \"6509\"}" > build.bff'
    - export YYP_FILENAME=$(basename $YYP_FILE)
    - rm -rf $CI_PROJECT_DIR/gm_tmp/build/package

    - $RUNTIME_DIR/bin/igor/linux/x64/Igor $EXTRA_OPTS --runtime=VM --yydebug --rp=$RUNTIME_DIR --project=$CI_PROJECT_DIR/$YYP_FILE --uf=$PROFILE_DIR --of=$CI_PROJECT_DIR/gm_tmp/build/${YYP_FILENAME%yyp}zip --tf=$CI_PROJECT_DIR/build_linux.zip --config=${CONFIG_NAME:-Default} --options=$CI_PROJECT_DIR/gm_tmp/build/build.bff --cache=$CI_PROJECT_DIR/gm_tmp/cache -- Linux Package || true

    # cleanup build for next time
    - rm -rf $CI_PROJECT_DIR/gm_tmp/build/package

    # check build successful (Igor returns 1 a lot, so we've surpressed that)
    - test -f $CI_PROJECT_DIR/build_linux.zip
  artifacts:
    paths:
      - build_linux.zip
    expire_in: 2 weeks
  only:
    - tags
    - merge_requests
  interruptible: true

docker build:
  extends: .docker build
  stage: build
  needs: 
    - gamemaker build
  dependencies: [gamemaker build]
  before_script:
    - mkdir -p $CI_PROJECT_DIR/dist
    - unzip build_linux.zip -d $CI_PROJECT_DIR/dist
  only:
    - tags
    - merge_requests
  interruptible: true
